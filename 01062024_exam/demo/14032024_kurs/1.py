"""
У Санта-Клауса и его команды для упаковки подарков есть N кубических коробок двух цветов.
Самой привлекательной для детей считается упаковка подарка по принципу матрёшки –
подарок упаковывается в одну из коробок, та в свою очередь в другую коробку и т.д,
при этом их цвета обязательно должны чередоваться. Одну коробку можно поместить в другую,
если длина её стороны хотя бы на 7 единиц меньше длины стороны другой коробки. Коробка с нечетной длиной стороны - красная, с четной - синяя.
Определите наибольшее количество коробок, которое можно использовать для упаковки одного подарка, и максимально возможную длину
стороны самой маленькой коробки, где будет находиться подарок. Размер подарка позволяет поместить его в самую маленькую коробку.
Входные данные
В первой строке входного файла находится число N – количество коробок у Санта-Клауса (натуральное число, не превышающее 10 000). В следующих N строках находятся значения длин сторон коробок (все числа натуральные, не превышающие 10 000), каждое – в отдельной строке.
Запишите в ответе два целых числа: сначала наибольшее количество коробок, которое можно использовать для упаковки одного подарка, затем максимально возможную длину стороны самой маленькой коробки в таком наборе.
Типовой пример организации данных во входном файле
6
43
40
33
28
40
29
Пример входного файла приведён для шести коробок и случая, когда минимальная допустимая разница между длинами сторон коробок, подходящих для упаковки «матрёшкой», составляет 3 единицы.
При таких исходных данных условию задачи удовлетворяют наборы коробок с длинами сторон 29, 40 и 43 или 33, 40 и 43 или 28, 33, 40, 43 соответственно, т.е. наибольшее количество коробок равно 4, а наибольшая длина стороны самой маленькой коробки равна 28.
"""
with open("26_12113.txt") as f:
    n=int(f.readline())
    a=[int(x) for x in f]

a.sort(reverse=1)

# x=a[0]
for j in range(0,10):
    x = a[j]
    b=[x]
    for i in range(j+1,len(a)):
        if x-a[i]>=7 and (x+a[i])%2==1:
            b.append(a[i])
            x=a[i]

    print(len(b),b[-1])


print (a[0],a[-1])